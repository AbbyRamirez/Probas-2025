{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN/LUIpvMMrvzSQCixHNmGf"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":613},"id":"GAeOKFkRgZcZ","executionInfo":{"status":"ok","timestamp":1740342934073,"user_tz":360,"elapsed":207,"user":{"displayName":"Ramírez López Abby Aimeé","userId":"00630022850277319164"}},"outputId":"f81a40fd-76e7-4273-ae73-7b21257bb38d"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Análisis del histograma:\n","Media: -0.045256707490195384\n","Mediana: -0.058028034799627745\n","Desviación estándar: 0.9870331586690257\n","Varianza: 0.9742344563121542\n","Modas: []\n","Outliers: [-2.77259275642665, -2.659172237996741, -2.7396771671895563, 2.6962240525635797, -3.0461430547999266, -2.8345545052747023, 2.594424587768152, 2.759355114021582]\n"]}],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","# Generar datos aleatorios\n","np.random.seed(0)\n","datos = np.random.randn(1000)\n","\n","# Generar histograma\n","plt.hist(datos, bins=30, alpha=0.7, color='skyblue', edgecolor='black')\n","plt.title('Histograma de datos aleatorios')\n","plt.xlabel('Valor')\n","plt.ylabel('Frecuencia')\n","plt.grid(True)\n","plt.show()\n","\n","# Analizar histograma\n","print('Análisis del histograma:')\n","print(f'Media: {np.mean(datos)}')\n","print(f'Mediana: {np.median(datos)}')\n","print(f'Desviación estándar: {np.std(datos)}')\n","print(f'Varianza: {np.var(datos)}')\n","\n","# Identificar modas\n","modas = []\n","unique, counts = np.unique(datos, return_counts=True)\n","for i in range(len(unique)):\n","    if counts[i] > 10:\n","        modas.append(unique[i])\n","print(f'Modas: {modas}')\n","\n","# Identificar outliers\n","Q1 = np.percentile(datos, 25)\n","Q3 = np.percentile(datos, 75)\n","IQR = Q3 - Q1\n","\n","outliers = []\n","for i in range(len(datos)):\n","    if datos[i] < Q1 - 1.5 * IQR or datos[i] > Q3 + 1.5 * IQR:\n","        outliers.append(datos[i])\n","\n","print(f'Outliers: {outliers}')\n","\n","\n"]}]}
